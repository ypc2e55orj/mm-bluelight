#include <unistd.h>

#include "../../main/map.h"

// https://www.kerislab.jp/micromouse-maze-data/
// 32MM2022HX.maze
const uint8_t _32MM2022HX_maze[/* y */ 32][/* x */ 32] = {
    {0xe, 0xc, 0x5, 0x5, 0x5, 0x4, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x7, 0xc, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x5, 0x5, 0x4, 0x4, 0x5, 0x5, 0x6},
    {0x8, 0x3, 0xc, 0x5, 0x5, 0x2, 0xc, 0x4, 0x4, 0x4, 0x4,
     0x6, 0xa, 0xc, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x6, 0xc, 0x6, 0xa, 0xa, 0xe, 0xe, 0xa},
    {0xa, 0xc, 0x2, 0xc, 0x6, 0xa, 0x8, 0x0, 0x0, 0x0, 0x0,
     0x2, 0xa, 0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x6,
     0xc, 0x6, 0xa, 0xa, 0x8, 0x3, 0x9, 0x1, 0x1, 0x2},
    {0xa, 0xa, 0xa, 0x9, 0x3, 0xa, 0x9, 0x1, 0x1, 0x1, 0x1,
     0x3, 0xa, 0xc, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3,
     0x8, 0x2, 0xa, 0xa, 0xa, 0xc, 0x5, 0x5, 0x6, 0xa},
    {0xa, 0xa, 0x8, 0x5, 0x5, 0x3, 0xc, 0x5, 0x5, 0x6, 0xc,
     0x6, 0xa, 0xa, 0xc, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x6,
     0x8, 0x2, 0x9, 0x3, 0xb, 0xa, 0xc, 0x6, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xc, 0x5, 0x6, 0xa, 0xc, 0x6, 0x9, 0x3,
     0x9, 0x3, 0xa, 0xa, 0xc, 0x4, 0x4, 0x6, 0xc, 0x6, 0xa,
     0x8, 0x0, 0x4, 0x6, 0xc, 0x2, 0xa, 0xa, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0x9, 0x6, 0x9, 0x3, 0xa, 0x9, 0x5, 0x5,
     0x5, 0x5, 0x3, 0xa, 0x8, 0x0, 0x0, 0x2, 0xa, 0xa, 0xa,
     0x8, 0x0, 0x0, 0x2, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa},
    {0xa, 0xa, 0x9, 0x6, 0x9, 0x5, 0x6, 0x9, 0x5, 0x5, 0x5,
     0x5, 0x4, 0x5, 0x3, 0x8, 0x0, 0x0, 0x2, 0xa, 0xa, 0xa,
     0x9, 0x1, 0x0, 0x2, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa},
    {0xa, 0xa, 0xc, 0x1, 0x5, 0x6, 0xa, 0xc, 0x4, 0x4, 0x4,
     0x6, 0xa, 0xc, 0x6, 0x8, 0x0, 0x0, 0x2, 0xa, 0xa, 0x9,
     0x5, 0x6, 0x8, 0x2, 0xa, 0xb, 0xa, 0xa, 0xa, 0xa},
    {0xa, 0x9, 0x2, 0xc, 0x6, 0xa, 0xa, 0x8, 0x0, 0x0, 0x0,
     0x2, 0xa, 0xa, 0xa, 0x8, 0x0, 0x0, 0x2, 0xa, 0x8, 0x6,
     0xc, 0x3, 0x9, 0x3, 0x9, 0x5, 0x3, 0xa, 0xa, 0xa},
    {0xa, 0xc, 0x2, 0xa, 0xa, 0xa, 0xa, 0x8, 0x0, 0x0, 0x0,
     0x2, 0xa, 0xa, 0xa, 0x9, 0x1, 0x1, 0x3, 0xa, 0xa, 0xa,
     0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x1, 0x1, 0x1,
     0x3, 0xa, 0xa, 0xa, 0xc, 0x4, 0x5, 0x5, 0x3, 0xa, 0xa,
     0xc, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x6, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xc, 0x6, 0xc, 0x6,
     0xc, 0x3, 0xa, 0xa, 0xa, 0x8, 0x5, 0x5, 0x5, 0x3, 0x9,
     0x3, 0xc, 0x4, 0x4, 0x4, 0x4, 0x6, 0xa, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x3, 0x9, 0x3, 0x9,
     0x1, 0x6, 0xa, 0x9, 0x3, 0xa, 0xc, 0x6, 0xc, 0x5, 0x5,
     0x6, 0x8, 0x0, 0x0, 0x0, 0x0, 0x3, 0xa, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0x8, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x6, 0xa, 0xa, 0xc, 0x4, 0x2, 0xa, 0x9, 0x3, 0xc, 0x6,
     0xa, 0x8, 0x0, 0x0, 0x0, 0x3, 0xc, 0x3, 0xa, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0xb, 0xc, 0x4, 0x4, 0x4, 0x6,
     0xa, 0xa, 0xa, 0x8, 0x0, 0x2, 0x9, 0x5, 0x5, 0x2, 0xa,
     0xa, 0x8, 0x0, 0x0, 0x3, 0xc, 0x3, 0xc, 0x3, 0xa},
    {0x8, 0x3, 0xa, 0xa, 0x9, 0x6, 0x8, 0x0, 0x0, 0x0, 0x2,
     0xa, 0xa, 0xa, 0x9, 0x1, 0x3, 0xc, 0x5, 0x6, 0xa, 0xa,
     0xa, 0x8, 0x0, 0x3, 0xc, 0x3, 0xc, 0x3, 0xe, 0xa},
    {0xa, 0xc, 0x3, 0x9, 0x6, 0xa, 0x8, 0x0, 0x0, 0x0, 0x2,
     0xa, 0xa, 0xa, 0xc, 0x4, 0x6, 0x9, 0x6, 0xa, 0xa, 0xa,
     0xa, 0x9, 0x3, 0xc, 0x3, 0xc, 0x3, 0xc, 0x2, 0xa},
    {0xa, 0xa, 0xc, 0x6, 0xa, 0xa, 0x8, 0x0, 0x0, 0x0, 0x2,
     0xa, 0xa, 0xa, 0xa, 0xa, 0xb, 0xc, 0x3, 0xa, 0xa, 0xa,
     0xa, 0xe, 0xc, 0x3, 0xc, 0x3, 0xc, 0x0, 0x2, 0xa},
    {0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x1, 0x1, 0x1, 0x3,
     0xa, 0xa, 0xa, 0xa, 0x9, 0x5, 0x1, 0x7, 0x9, 0x2, 0xa,
     0xa, 0x9, 0x2, 0xd, 0x2, 0xd, 0x0, 0x0, 0x2, 0xa},
    {0xa, 0x9, 0x3, 0xa, 0xa, 0x9, 0x5, 0x5, 0x6, 0xc, 0x6,
     0xa, 0xa, 0xa, 0x9, 0x5, 0x5, 0x5, 0x5, 0x6, 0xa, 0xa,
     0x8, 0x6, 0x9, 0x6, 0x9, 0x6, 0x9, 0x0, 0x2, 0xa},
    {0xa, 0xc, 0x6, 0xa, 0x9, 0x5, 0x5, 0x6, 0xa, 0xa, 0xa,
     0xa, 0xa, 0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0xa, 0xa,
     0xb, 0x9, 0x6, 0x9, 0x6, 0x9, 0x6, 0x9, 0x2, 0xa},
    {0xa, 0x8, 0x2, 0x9, 0x4, 0x5, 0x7, 0xa, 0xa, 0xa, 0xa,
     0xa, 0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x6, 0xa, 0xa,
     0xc, 0x6, 0xa, 0xc, 0x1, 0x7, 0x9, 0x6, 0xb, 0xa},
    {0xa, 0x8, 0x0, 0x6, 0x9, 0x4, 0x7, 0xa, 0xa, 0xa, 0xa,
     0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x6, 0xc, 0x3, 0xa, 0xa,
     0xa, 0xa, 0x9, 0x3, 0xe, 0xc, 0x6, 0x9, 0x6, 0xa},
    {0xa, 0x8, 0x0, 0x3, 0xd, 0x1, 0x6, 0xa, 0xa, 0xa, 0xa,
     0xc, 0x6, 0xc, 0x6, 0xc, 0x6, 0xa, 0x9, 0x6, 0x8, 0x1,
     0x3, 0x9, 0x5, 0x5, 0x1, 0x3, 0x9, 0x6, 0xa, 0xa},
    {0xa, 0x8, 0x2, 0xc, 0x5, 0x5, 0x2, 0xa, 0xa, 0xa, 0xa,
     0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0x9, 0x6, 0xa, 0xa, 0xc,
     0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x6, 0xa, 0xa, 0xa},
    {0xa, 0x8, 0x2, 0x9, 0x5, 0x6, 0xa, 0xa, 0xa, 0xa, 0xa,
     0xa, 0x9, 0x3, 0x9, 0x3, 0x9, 0x6, 0xa, 0xa, 0xa, 0x9,
     0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x8, 0x2, 0xa},
    {0xa, 0x8, 0x0, 0x4, 0x6, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa,
     0xa, 0xc, 0x4, 0x4, 0x4, 0x6, 0xa, 0xa, 0xa, 0x9, 0x5,
     0x5, 0x5, 0x5, 0x5, 0x5, 0x4, 0x7, 0xa, 0xa, 0xa},
    {0xa, 0x9, 0x1, 0x1, 0x3, 0xa, 0x9, 0x3, 0x9, 0x3, 0xa,
     0xa, 0x8, 0x0, 0x0, 0x0, 0x2, 0xa, 0xa, 0x9, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x6, 0xc, 0x3, 0xc, 0x1, 0x2, 0xa},
    {0xa, 0xe, 0xc, 0x6, 0xd, 0x1, 0x5, 0x5, 0x5, 0x6, 0xa,
     0xa, 0x8, 0x0, 0x0, 0x0, 0x2, 0xa, 0x9, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x3, 0x9, 0x5, 0x3, 0xc, 0x3, 0xa},
    {0x8, 0x2, 0xa, 0x9, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0x9,
     0x3, 0x9, 0x1, 0x1, 0x1, 0x3, 0x9, 0x5, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x3, 0xc, 0x3},
    {0xb, 0x9, 0x1, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5,
     0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x5, 0x1, 0x7},
};

#define DELAY_MS 50

int main(int argc, char **argv) {
  int goal_x[MAZE_GOAL_SIZE_X] = {14, 15, 16},
      goal_y[MAZE_GOAL_SIZE_Y] = {14, 15, 16};
  Map map(goal_x, goal_y);
  Map::Direction dir = Map::DIRECTION_NORTH;

  map.setPos(0, 0);

  printf("\x1b[2J");
  printf("\x1b[0;0H");
  map.print();

  Map::Walls walls;

  // 探索走行
  while (!map.inGoal(goal_x, goal_y)) {
    // 壁設定
    uint8_t wallsSer = _32MM2022HX_maze[map.getPos().y][map.getPos().x];
    walls.north =
        ((wallsSer >> 0) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.east =
        ((wallsSer >> 1) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.south =
        ((wallsSer >> 2) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.west =
        ((wallsSer >> 3) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;

    map.setWall(map.getPos().x, map.getPos().y, walls);
    // 歩数マップを更新
    map.initStepsToGoal(goal_x, goal_y);
    map.makeSteps(false);
    // 次に進んで、自分の位置を更新
    map.setPos(map.getNextDir(false));
    // 出力
    printf("\x1b[0;0H");
    map.print();
    usleep(1000 * DELAY_MS);
  }
  // スタート座標まで戻る
  while (!map.inStart()) {
    // 壁設定
    uint8_t wallsSer = _32MM2022HX_maze[map.getPos().y][map.getPos().x];
    walls.north =
        ((wallsSer >> 0) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.east =
        ((wallsSer >> 1) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.south =
        ((wallsSer >> 2) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;
    walls.west =
        ((wallsSer >> 3) & 0x01) ? Map::WALL_EXISTS : Map::WALL_NOT_EXISTS;

    map.setWall(map.getPos().x, map.getPos().y, walls);
    // 歩数マップを更新
    map.initStepsToStart();
    map.makeSteps(false);
    // 次に進んで、自分の位置を更新
    map.setPos(map.getNextDir(false));
    // 出力
    printf("\x1b[0;0H");
    map.print();
    usleep(1000 * DELAY_MS);
  }
  // 最短走行
}